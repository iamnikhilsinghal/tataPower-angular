Node JS-
runtime environment
env where we can run our programming language code

html css
static data render on browser

JS-2009
client side- browser dependent
dynamic- interactive- user event- button click

not cross platform- server
chrome----> famous--- utilize js and render - faster compliation of JS
V8 Engine

node- use V8 Engine --- facilitates to run js on server 

node js in based on top of v8 engine
js-- angular


v8 engine
node- made in JS
express- framwork based on Node JS
runtime environment
programming language
library 
module

angular- framework based on JS
framework- module+library

cross-platform---- independent OS and HW

Event Loop?
2-3 minutes
call stack
callback queue
5.01

Pros and cons of Node js
https://www.geeksforgeeks.org/node-js/the-pros-and-cons-of-node-js-in-web-development/

Complete-
https://www.w3schools.com/nodejs/nodejs_get_started.asp\

Project Doubts-


download excel-
headings
data  -----------> Download


UI HTML doc	---->  blob ----> download
https://stackblitz.com/edit/angular-html-to-pdf-test-u4vgipdg?file=src%2Fapp%2Fapp.component.html,src%2Fapp%2Fapp.component.ts

browser local file and save in angular folder


Admin Login- manage app
User- only use the app
Route Gaurds- Navbar  // features show hide

Login--
{
  "email": "admin@example.com",
  "password": "SecurePassword123"
}

{
  "email": "user@example.com",
  "password": "SecurePassword123"
}
isUser=true
Login button click-

comp.ts
isAdmin= true

services-
isAdmin
isUser

No use of API
only use JSON hardcoded

show:false
npm init -y

let http = require('http');
http.createServer(function (req, res) {
  res.writeHead(200, {'Content-Type': 'text/html5'});
  res.end('Hello World!');
}).listen(8080);

create table employee (
	id SERIAL PRIMARY KEY,
	fname TEXT,
	email TEXT
)

select * from employee;

NEXT-
crete api 
connect with postgres
fetch data from postgres